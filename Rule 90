module top_module (
    input clk,
    input load,
    input [511:0] data,
    output reg [511:0] q
);
    integer i;
    reg [511:0] q_next;

    always @(posedge clk) begin
        if (load) begin
            q <= data;
        end else begin
            // Boundary cases
            q_next[0] = 1'b0 ^ q[1];           // Left neighbor is off
            q_next[511] = q[510] ^ 1'b0;       // Right neighbor is off

            // Main rule 90 logic for interior cells
            for (i = 1; i < 511; i = i + 1) begin
                q_next[i] = q[i-1] ^ q[i+1];
            end

            // Update q after full computation
            q <= q_next;
        end
    end
endmodule
